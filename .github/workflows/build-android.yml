name: 🚀 Build & Release .NET MAUI Android

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-android:
    name: 🏗️ Compilar y Generar APK
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Clonar el repositorio
        uses: actions/checkout@v3

      - name: 🔧 Instalar .NET y .NET MAUI
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: 🔄 Instalar Workloads de .NET MAUI
        run: dotnet workload restore

      - name: 🔄 Restaurar dependencias
        run: dotnet restore

      - name: 📌 Calcular versión dinámica
        id: version
        run: |
          BUILD_NUMBER=${{ github.run_number }}
          MAX_PATCH=75
          MAX_MINOR=75
          MAJOR=$(( BUILD_NUMBER / (MAX_MINOR * MAX_PATCH) ))
          MINOR=$(( (BUILD_NUMBER / MAX_PATCH) % MAX_MINOR ))
          PATCH=$(( BUILD_NUMBER % MAX_PATCH ))
          if [ $PATCH -eq 0 ]; then PATCH=0; MINOR=$((MINOR + 1)); fi
          if [ $MINOR -eq $MAX_MINOR ]; then MINOR=0; MAJOR=$((MAJOR + 1)); fi
          VERSION_NAME="$MAJOR.$MINOR.$PATCH"
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "Nueva versión generada: $VERSION_NAME"

      - name: 📝 Modificar versión en AndroidManifest.xml
        run: |
          MANIFEST_PATH=$(find . -name "AndroidManifest.xml")
          if [ -f "$MANIFEST_PATH" ]; then
            sed -i 's/android:versionName="[0-9.]*"/android:versionName="'$VERSION_NAME'"/g' "$MANIFEST_PATH"
          else
            echo "⚠️ No se encontró el AndroidManifest.xml"
            exit 1
          fi

      - name: 🔨 Compilar la aplicación para Android
        run: dotnet publish -f net8.0-android -c Release -o publish_output

      - name: 📂 Verificar archivos generados
        run: find publish_output -name "*.apk" || echo "⚠️ No se encontró ningún APK"

      - name: 📦 Empaquetar APK con nombre personalizado
        run: |
          cd publish_output
          APK_NAME=$(ls *.apk | head -n 1)
          mv "$APK_NAME" "DISMOGT_REPORTES_v$VERSION_NAME.apk"

      - name: 📤 Subir APK como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: APK-Android
          path: publish_output/DISMOGT_REPORTES_v${{ env.VERSION_NAME }}.apk

  release:
    name: 🚀 Crear Release en GitHub
    needs: build-android
    runs-on: ubuntu-latest

    steps:
      - name: 🔍 Verificar artefactos disponibles antes de descargar
        run: ls -R

      - name: 📥 Descargar APK generado
        uses: actions/download-artifact@v4
        with:
          name: APK-Android
          path: .

      - name: 🚀 Crear una nueva release en GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION_NAME }}
          name: "Versión ${{ env.VERSION_NAME }}"
          draft: false
          prerelease: false
          files: DISMOGT_REPORTES_v${{ env.VERSION_NAME }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
